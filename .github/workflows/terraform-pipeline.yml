name: Terraform Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  TF_INPUT: false
  TF_IN_AUTOMATION: true

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create key.json from Secret
        env:
          KEY_JSON: ${{ secrets.YANDEX_KEY_JSON }}
        run: |
          mkdir -p terraform
          echo "$KEY_JSON" > terraform/key.json
          echo "Key file created successfully"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.YANDEX_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.YANDEX_SECRET_KEY }}
        run: cd terraform && terraform init
        continue-on-error: true

      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.YANDEX_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.YANDEX_SECRET_KEY }}
        run: cd terraform && terraform plan
        continue-on-error: true

      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.YANDEX_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.YANDEX_SECRET_KEY }}
        run: cd terraform && terraform apply -auto-approve
        continue-on-error: true

      - name: Terraform Output
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.YANDEX_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.YANDEX_SECRET_KEY }}
        run: cd terraform && terraform output
        continue-on-error: true
