name: Terraform Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-pipeline.yml'
  
  pull_request:
    branches:
      - main
    paths:
      - 'terraform/**'
  
  workflow_dispatch:

env:
  TERRAFORM_VERSION: "1.9.0"
  TF_INPUT: false
  TF_IN_AUTOMATION: true

jobs:
  # ============================================
  # Job: Проверка Terraform кода (Validate)
  # ============================================
  terraform-validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      # Инициализация Terraform БЕЗ backend (для проверки синтаксиса)
      - name: Terraform Init (Validation Only)
        run: |
          cd terraform
          terraform init -backend=false
        continue-on-error: true

      # Валидация синтаксиса
      - name: Terraform Validate
        run: |
          cd terraform
          terraform validate
        continue-on-error: true

  # ============================================
  # Job: Планирование Terraform (Plan)
  # ============================================
  terraform-plan:
    name: Plan Terraform Changes
    runs-on: ubuntu-latest
    needs: terraform-validate
    
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.YANDEX_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.YANDEX_SECRET_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      # Инициализация Terraform с backend (S3)
      - name: Terraform Init
        run: |
          cd terraform
          terraform init
        continue-on-error: true

      # Создание плана изменений
      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -out=tfplan
        continue-on-error: true

      # Загрузка плана как артефакта
      - name: Upload tfplan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: terraform/tfplan
        continue-on-error: true

  # ============================================
  # Job: Применение Terraform (Apply)
  # Только для push в main ветку
  # ============================================
  terraform-apply:
    name: Apply Terraform Changes
    runs-on: ubuntu-latest
    needs: terraform-plan
    
    # Условие: только для push в main (не для PR)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.YANDEX_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.YANDEX_SECRET_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        run: |
          cd terraform
          terraform init
        continue-on-error: true

      # Загрузка сохранённого плана
      - name: Download tfplan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: terraform/
        continue-on-error: true

      # Применение плана
      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve tfplan
        continue-on-error: true

      # Вывод outputs
      - name: Terraform Output
        run: |
          cd terraform
          terraform output
        continue-on-error: true

      # Создание отчёта о результатах
      - name: Create workflow summary
        run: |
          echo "## Terraform Pipeline Execution" >> $GITHUB_STEP_SUMMARY
          echo "✅ Terraform changes applied successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Workflow Details:**" >> $GITHUB_STEP_SUMMARY
          echo "- Event: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- Branch: ${{ github.ref }}" >> $GITHUB_STEP_SUMMARY
          echo "- Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true
